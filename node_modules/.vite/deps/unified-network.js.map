{
  "version": 3,
  "sources": ["../../unified-network/lib/util.js", "../../unified-network/lib/unified-network.js", "../../unified-network/lib/index.js", "dep:unified-network"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPaths = void 0;\nfunction joinPaths(...paths) {\n    let [first, ...rest] = paths;\n    const cleanedRest = rest.map(it => it.slice(it.startsWith('/') ? 1 : 0, it.endsWith('/') ? -1 : undefined));\n    if (rest[rest.length - 1].endsWith('/')) {\n        cleanedRest[cleanedRest.length - 1] = cleanedRest[cleanedRest.length - 1] + '/';\n    }\n    return [\n        first.endsWith('/') ? first.slice(0, -1) : first,\n        ...cleanedRest,\n    ].join('/');\n}\nexports.joinPaths = joinPaths;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnifiedNetwork = void 0;\nconst util_1 = require(\"./util\");\nasync function httpProcessorFetch({ method, url, headers, body }) {\n    var _a;\n    let responseStatus = undefined;\n    let responseData = undefined;\n    let responseHeaders = undefined;\n    const response = await fetch(url, {\n        method,\n        body,\n        headers,\n    });\n    responseStatus = response.status;\n    responseHeaders = Object.fromEntries(response.headers.entries());\n    if (response.ok) {\n        responseData = await response.text();\n        if ((_a = responseHeaders['content-type']) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes('application/json')) {\n            try {\n                responseData = JSON.parse(responseData);\n            }\n            catch (error) {\n                throw new Error('could not parse response data ' + error.message);\n            }\n        }\n    }\n    else {\n        responseData = await response.text();\n    }\n    return {\n        status: responseStatus,\n        headers: responseHeaders,\n        data: responseData\n    };\n}\nclass UnifiedNetwork {\n    constructor(base) {\n        var _a;\n        var _b;\n        this.base = base !== null && base !== void 0 ? base : {};\n        (_a = (_b = this.base).headers) !== null && _a !== void 0 ? _a : (_b.headers = {});\n    }\n    async request(config) {\n        var _a, _b, _c, _d;\n        let { method, baseUrl, url, parameters, queries, body, processor } = Object.assign(Object.assign({}, ((_a = this.base) !== null && _a !== void 0 ? _a : {})), config);\n        url !== null && url !== void 0 ? url : (url = '/');\n        processor !== null && processor !== void 0 ? processor : (processor = httpProcessorFetch);\n        let fullUrl = baseUrl ? (0, util_1.joinPaths)(baseUrl, url) : url;\n        if (parameters) {\n            for (const key in parameters) {\n                fullUrl = fullUrl.replaceAll(`[${key}]`, parameters[key]);\n            }\n        }\n        if (queries) {\n            fullUrl = fullUrl + (fullUrl.includes('?') ? '&' : '?') + Object.keys(queries).map(key => `${key}=${queries[key]}`).join('&');\n        }\n        let headers = Object.assign(Object.assign({}, ((_c = (_b = this.base) === null || _b === void 0 ? void 0 : _b.headers) !== null && _c !== void 0 ? _c : {})), ((_d = config.headers) !== null && _d !== void 0 ? _d : {}));\n        if (typeof body === 'object' && body !== null) {\n            body = JSON.stringify(body);\n            headers['Content-Type'] = 'application/json';\n        }\n        let responseStatus = undefined;\n        let responseData = undefined;\n        let responseHeaders = {};\n        try {\n            const { status: processorStatus, data: processorData, headers: processorHeaders } = await processor({\n                url: fullUrl,\n                method: method !== null && method !== void 0 ? method : 'get',\n                headers,\n                body,\n            });\n            responseStatus = processorStatus;\n            responseHeaders = processorHeaders;\n            responseData = processorData;\n        }\n        catch (error) {\n            console.error(error);\n            responseStatus = -1;\n            responseData = undefined;\n        }\n        return {\n            status: responseStatus,\n            data: responseData,\n            headers: responseHeaders\n        };\n    }\n    async get(config) {\n        return this.request(Object.assign(Object.assign({}, config), { method: 'get' }));\n    }\n    async post(config) {\n        return this.request(Object.assign(Object.assign({}, config), { method: 'post' }));\n    }\n    async put(config) {\n        return this.request(Object.assign(Object.assign({}, config), { method: 'put' }));\n    }\n    async patch(config) {\n        return this.request(Object.assign(Object.assign({}, config), { method: 'patch' }));\n    }\n    async delete(config) {\n        return this.request(Object.assign(Object.assign({}, config), { method: 'delete' }));\n    }\n    async head(config) {\n        return this.request(Object.assign(Object.assign({}, config), { method: 'head' }));\n    }\n}\nexports.UnifiedNetwork = UnifiedNetwork;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeUnifiedNetwork = void 0;\nconst unified_network_1 = require(\"./unified-network\");\nfunction makeUnifiedNetwork(base) {\n    return new unified_network_1.UnifiedNetwork(base);\n}\nexports.makeUnifiedNetwork = makeUnifiedNetwork;\n", "export default require(\"./node_modules/unified-network/lib/index.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY;AACpB,aAAS,aAAa,OAAO;AACzB,UAAI,CAAC,UAAU,IAAI,IAAI;AACvB,YAAM,cAAc,KAAK,IAAI,QAAM,GAAG,MAAM,GAAG,WAAW,GAAG,IAAI,IAAI,GAAG,GAAG,SAAS,GAAG,IAAI,KAAK,MAAS,CAAC;AAC1G,UAAI,KAAK,KAAK,SAAS,GAAG,SAAS,GAAG,GAAG;AACrC,oBAAY,YAAY,SAAS,KAAK,YAAY,YAAY,SAAS,KAAK;AAAA,MAChF;AACA,aAAO;AAAA,QACH,MAAM,SAAS,GAAG,IAAI,MAAM,MAAM,GAAG,EAAE,IAAI;AAAA,QAC3C,GAAG;AAAA,MACP,EAAE,KAAK,GAAG;AAAA,IACd;AACA,YAAQ,YAAY;AAAA;AAAA;;;ACdpB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,iBAAiB;AACzB,QAAM,SAAS;AACf,mBAAe,mBAAmB,EAAE,QAAQ,KAAK,SAAS,KAAK,GAAG;AAC9D,UAAI;AACJ,UAAI,iBAAiB;AACrB,UAAI,eAAe;AACnB,UAAI,kBAAkB;AACtB,YAAM,WAAW,MAAM,MAAM,KAAK;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,MACJ,CAAC;AACD,uBAAiB,SAAS;AAC1B,wBAAkB,OAAO,YAAY,SAAS,QAAQ,QAAQ,CAAC;AAC/D,UAAI,SAAS,IAAI;AACb,uBAAe,MAAM,SAAS,KAAK;AACnC,aAAK,KAAK,gBAAgB,qBAAqB,QAAQ,OAAO,SAAS,SAAS,GAAG,YAAY,EAAE,SAAS,kBAAkB,GAAG;AAC3H,cAAI;AACA,2BAAe,KAAK,MAAM,YAAY;AAAA,UAC1C,SACO,OAAP;AACI,kBAAM,IAAI,MAAM,mCAAmC,MAAM,OAAO;AAAA,UACpE;AAAA,QACJ;AAAA,MACJ,OACK;AACD,uBAAe,MAAM,SAAS,KAAK;AAAA,MACvC;AACA,aAAO;AAAA,QACH,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,MAAM;AAAA,MACV;AAAA,IACJ;AACA,QAAM,iBAAN,MAAqB;AAAA,MACjB,YAAY,MAAM;AACd,YAAI;AACJ,YAAI;AACJ,aAAK,OAAO,SAAS,QAAQ,SAAS,SAAS,OAAO,CAAC;AACvD,SAAC,MAAM,KAAK,KAAK,MAAM,aAAa,QAAQ,OAAO,SAAS,KAAM,GAAG,UAAU,CAAC;AAAA,MACpF;AAAA,MACA,MAAM,QAAQ,QAAQ;AAClB,YAAI,IAAI,IAAI,IAAI;AAChB,YAAI,EAAE,QAAQ,SAAS,KAAK,YAAY,SAAS,MAAM,UAAU,IAAI,OAAO,OAAO,OAAO,OAAO,CAAC,IAAK,KAAK,KAAK,UAAU,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAE,GAAG,MAAM;AACpK,gBAAQ,QAAQ,QAAQ,SAAS,MAAO,MAAM;AAC9C,sBAAc,QAAQ,cAAc,SAAS,YAAa,YAAY;AACtE,YAAI,UAAU,WAAW,GAAG,OAAO,WAAW,SAAS,GAAG,IAAI;AAC9D,YAAI,YAAY;AACZ,qBAAW,OAAO,YAAY;AAC1B,sBAAU,QAAQ,WAAW,IAAI,QAAQ,WAAW,IAAI;AAAA,UAC5D;AAAA,QACJ;AACA,YAAI,SAAS;AACT,oBAAU,WAAW,QAAQ,SAAS,GAAG,IAAI,MAAM,OAAO,OAAO,KAAK,OAAO,EAAE,IAAI,SAAO,GAAG,OAAO,QAAQ,MAAM,EAAE,KAAK,GAAG;AAAA,QAChI;AACA,YAAI,UAAU,OAAO,OAAO,OAAO,OAAO,CAAC,IAAK,MAAM,KAAK,KAAK,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG,aAAa,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAE,IAAK,KAAK,OAAO,aAAa,QAAQ,OAAO,SAAS,KAAK,CAAC,CAAE;AACzN,YAAI,OAAO,SAAS,YAAY,SAAS,MAAM;AAC3C,iBAAO,KAAK,UAAU,IAAI;AAC1B,kBAAQ,kBAAkB;AAAA,QAC9B;AACA,YAAI,iBAAiB;AACrB,YAAI,eAAe;AACnB,YAAI,kBAAkB,CAAC;AACvB,YAAI;AACA,gBAAM,EAAE,QAAQ,iBAAiB,MAAM,eAAe,SAAS,iBAAiB,IAAI,MAAM,UAAU;AAAA,YAChG,KAAK;AAAA,YACL,QAAQ,WAAW,QAAQ,WAAW,SAAS,SAAS;AAAA,YACxD;AAAA,YACA;AAAA,UACJ,CAAC;AACD,2BAAiB;AACjB,4BAAkB;AAClB,yBAAe;AAAA,QACnB,SACO,OAAP;AACI,kBAAQ,MAAM,KAAK;AACnB,2BAAiB;AACjB,yBAAe;AAAA,QACnB;AACA,eAAO;AAAA,UACH,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,SAAS;AAAA,QACb;AAAA,MACJ;AAAA,MACA,MAAM,IAAI,QAAQ;AACd,eAAO,KAAK,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,EAAE,QAAQ,MAAM,CAAC,CAAC;AAAA,MACnF;AAAA,MACA,MAAM,KAAK,QAAQ;AACf,eAAO,KAAK,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,EAAE,QAAQ,OAAO,CAAC,CAAC;AAAA,MACpF;AAAA,MACA,MAAM,IAAI,QAAQ;AACd,eAAO,KAAK,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,EAAE,QAAQ,MAAM,CAAC,CAAC;AAAA,MACnF;AAAA,MACA,MAAM,MAAM,QAAQ;AAChB,eAAO,KAAK,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,EAAE,QAAQ,QAAQ,CAAC,CAAC;AAAA,MACrF;AAAA,MACA,MAAM,OAAO,QAAQ;AACjB,eAAO,KAAK,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,EAAE,QAAQ,SAAS,CAAC,CAAC;AAAA,MACtF;AAAA,MACA,MAAM,KAAK,QAAQ;AACf,eAAO,KAAK,QAAQ,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM,GAAG,EAAE,QAAQ,OAAO,CAAC,CAAC;AAAA,MACpF;AAAA,IACJ;AACA,YAAQ,iBAAiB;AAAA;AAAA;;;AC1GzB;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,qBAAqB;AAC7B,QAAM,oBAAoB;AAC1B,aAAS,mBAAmB,MAAM;AAC9B,aAAO,IAAI,kBAAkB,eAAe,IAAI;AAAA,IACpD;AACA,YAAQ,qBAAqB;AAAA;AAAA;;;ACP7B,IAAO,0BAAQ;",
  "names": []
}
